generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model BlogPost {
  id        Int       @id(map: "idx_17585_blogpost_pkey") @unique @default(autoincrement())
  title     String?
  slug      String?   @unique(map: "idx_17585_blogpost_slug_key")
  date      DateTime? @db.Timestamptz(6)
  excerpt   String?
  image     String?
  content   String?
  createdAt DateTime? @default(now()) @db.Timestamptz(6)
  blogTags  BlogPostToBlogTag[]

  @@map("blogpost")
}

model Mood {
  id   Int     @id(map: "idx_17554_mood_pkey") @default(autoincrement())
  mood String?
  tags Tag[]

  @@map("mood")
}

model Tag {
  id     Int     @id(map: "idx_17561_tag_pkey") @default(autoincrement())
  value  String?
  moodId Int?
  mood   Mood?   @relation(fields: [moodId], references: [id])

  @@map("tag")
}

model BlogTag {
  id    Int     @id(map: "idx_17593_blogtag_pkey") @default(autoincrement())
  value String? @unique(map: "idx_17593_blogtag_value_key")
  blogPosts BlogPostToBlogTag[]

  @@map("blogtag")
}

model BlogPostToBlogTag {
  A Int
  B Int
  blogPost BlogPost @relation(fields: [A], references: [id])
  blogTag  BlogTag  @relation(fields: [B], references: [id])

  @@id([A, B])
  @@map("_blogposttoblogtag")
}

model Game {
  id          Int       @id(map: "idx_17576_game_pkey") @default(autoincrement())
  name        String?
  slug        String?   @unique(map: "idx_17576_game_slug_key")
  description String?
  mood        String?
  image       String?
  steamUrl    String?
  popularity  Int?
  createdAt   DateTime? @default(now()) @db.Timestamptz(6)

  @@map("game")
}

model SuggestedGame {
  id        Int       @id(map: "idx_17568_suggestedgame_pkey") @default(autoincrement())
  name      String?
  mood      String?
  reason    String?
  createdAt DateTime? @default(now()) @db.Timestamptz(6)

  @@map("suggestedgame")
}

model feedback {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  email     String    @db.VarChar(255)
  message   String
  createdAt DateTime? @default(now()) @map("createdat") @db.Timestamptz(6)

  @@map("feedback")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String?  @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}


